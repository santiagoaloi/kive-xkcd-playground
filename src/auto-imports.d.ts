/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const EffectScope: typeof import('vue')['EffectScope']
  const GoogleAuthProvider: typeof import('firebase/auth')['GoogleAuthProvider']
  const addDoc: typeof import('firebase/firestore')['addDoc']
  const arrayUnion: typeof import('firebase/firestore')['arrayUnion']
  const auth: typeof import('@/firebase')['auth']
  const axios: typeof import('axios')['default']
  const capitalize: typeof import('./utils/methods')['capitalize']
  const collection: typeof import('firebase/firestore')['collection']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const createUserWithEmailAndPassword: typeof import('firebase/auth')['createUserWithEmailAndPassword']
  const createVuetify: typeof import('vuetify')['createVuetify']
  const customRef: typeof import('vue')['customRef']
  const db: typeof import('@/firebase')['db']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const deleteDoc: typeof import('firebase/firestore')['deleteDoc']
  const doc: typeof import('firebase/firestore')['doc']
  const editRoute: typeof import('./utils/routing')['editRoute']
  const effectScope: typeof import('vue')['effectScope']
  const functions: typeof import('@/firebase')['functions']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const getDoc: typeof import('firebase/firestore')['getDoc']
  const getDocs: typeof import('firebase/firestore')['getDocs']
  const getDownloadURL: typeof import('firebase/storage')['getDownloadURL']
  const getIdToken: typeof import('firebase/auth')['getIdToken']
  const getUserState: typeof import('@/firebase')['getUserState']
  const h: typeof import('vue')['h']
  const httpsCallable: typeof import('firebase/functions')['httpsCallable']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onSnapshot: typeof import('firebase/firestore')['onSnapshot']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const provide: typeof import('vue')['provide']
  const query: typeof import('firebase/firestore')['query']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const setDoc: typeof import('firebase/firestore')['setDoc']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const signInWithEmailAndPassword: typeof import('firebase/auth')['signInWithEmailAndPassword']
  const signInWithPopup: typeof import('firebase/auth')['signInWithPopup']
  const signOut: typeof import('firebase/auth')['signOut']
  const storage: typeof import('@/firebase')['storage']
  const storageRef: typeof import('firebase/storage')['ref']
  const stores: typeof import('./stores/index')['default']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const updateDoc: typeof import('firebase/firestore')['updateDoc']
  const uploadBytes: typeof import('firebase/storage')['uploadBytes']
  const uploadBytesResumable: typeof import('firebase/storage')['uploadBytesResumable']
  const uploadTaskSnapshot: typeof import('firebase/storage')['uploadTaskSnapshot']
  const useAppStore: typeof import('./stores/app')['useAppStore']
  const useAttrs: typeof import('vue')['useAttrs']
  const useAuthStore: typeof import('./stores/auth')['useAuthStore']
  const useComicsStore: typeof import('./stores/comics')['useComicsStore']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useDisplay: typeof import('vuetify')['useDisplay']
  const useRoute: typeof import('vue-router/auto')['useRoute']
  const useRouteQuery: typeof import('@vueuse/router')['useRouteQuery']
  const useRouter: typeof import('vue-router/auto')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const useTheme: typeof import('vuetify')['useTheme']
  const useUserProfileStore: typeof import('./stores/user-profile')['useUserProfileStore']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
  const where: typeof import('firebase/firestore')['where']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, VNode, WritableComputedRef } from 'vue'
  import('vue')
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface GlobalComponents {}
  interface ComponentCustomProperties {
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly GoogleAuthProvider: UnwrapRef<typeof import('firebase/auth')['GoogleAuthProvider']>
    readonly addDoc: UnwrapRef<typeof import('firebase/firestore')['addDoc']>
    readonly arrayUnion: UnwrapRef<typeof import('firebase/firestore')['arrayUnion']>
    readonly auth: UnwrapRef<typeof import('@/firebase')['auth']>
    readonly axios: UnwrapRef<typeof import('axios')['default']>
    readonly capitalize: UnwrapRef<typeof import('./utils/methods')['capitalize']>
    readonly collection: UnwrapRef<typeof import('firebase/firestore')['collection']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly createUserWithEmailAndPassword: UnwrapRef<typeof import('firebase/auth')['createUserWithEmailAndPassword']>
    readonly createVuetify: UnwrapRef<typeof import('vuetify')['createVuetify']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly db: UnwrapRef<typeof import('@/firebase')['db']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly deleteDoc: UnwrapRef<typeof import('firebase/firestore')['deleteDoc']>
    readonly doc: UnwrapRef<typeof import('firebase/firestore')['doc']>
    readonly editRoute: UnwrapRef<typeof import('./utils/routing')['editRoute']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly functions: UnwrapRef<typeof import('@/firebase')['functions']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly getDoc: UnwrapRef<typeof import('firebase/firestore')['getDoc']>
    readonly getDocs: UnwrapRef<typeof import('firebase/firestore')['getDocs']>
    readonly getDownloadURL: UnwrapRef<typeof import('firebase/storage')['getDownloadURL']>
    readonly getIdToken: UnwrapRef<typeof import('firebase/auth')['getIdToken']>
    readonly getUserState: UnwrapRef<typeof import('@/firebase')['getUserState']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly httpsCallable: UnwrapRef<typeof import('firebase/functions')['httpsCallable']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onSnapshot: UnwrapRef<typeof import('firebase/firestore')['onSnapshot']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly query: UnwrapRef<typeof import('firebase/firestore')['query']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly setDoc: UnwrapRef<typeof import('firebase/firestore')['setDoc']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly signInWithEmailAndPassword: UnwrapRef<typeof import('firebase/auth')['signInWithEmailAndPassword']>
    readonly signInWithPopup: UnwrapRef<typeof import('firebase/auth')['signInWithPopup']>
    readonly signOut: UnwrapRef<typeof import('firebase/auth')['signOut']>
    readonly storage: UnwrapRef<typeof import('@/firebase')['storage']>
    readonly storageRef: UnwrapRef<typeof import('firebase/storage')['ref']>
    readonly stores: UnwrapRef<typeof import('./stores/index')['default']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly updateDoc: UnwrapRef<typeof import('firebase/firestore')['updateDoc']>
    readonly uploadBytes: UnwrapRef<typeof import('firebase/storage')['uploadBytes']>
    readonly uploadBytesResumable: UnwrapRef<typeof import('firebase/storage')['uploadBytesResumable']>
    readonly uploadTaskSnapshot: UnwrapRef<typeof import('firebase/storage')['uploadTaskSnapshot']>
    readonly useAppStore: UnwrapRef<typeof import('./stores/app')['useAppStore']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useAuthStore: UnwrapRef<typeof import('./stores/auth')['useAuthStore']>
    readonly useComicsStore: UnwrapRef<typeof import('./stores/comics')['useComicsStore']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useDisplay: UnwrapRef<typeof import('vuetify')['useDisplay']>
    readonly useRoute: UnwrapRef<typeof import('vue-router/auto')['useRoute']>
    readonly useRouteQuery: UnwrapRef<typeof import('@vueuse/router')['useRouteQuery']>
    readonly useRouter: UnwrapRef<typeof import('vue-router/auto')['useRouter']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useTheme: UnwrapRef<typeof import('vuetify')['useTheme']>
    readonly useUserProfileStore: UnwrapRef<typeof import('./stores/user-profile')['useUserProfileStore']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
    readonly where: UnwrapRef<typeof import('firebase/firestore')['where']>
  }
}
declare module '@vue/runtime-core' {
  interface GlobalComponents {}
  interface ComponentCustomProperties {
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly GoogleAuthProvider: UnwrapRef<typeof import('firebase/auth')['GoogleAuthProvider']>
    readonly addDoc: UnwrapRef<typeof import('firebase/firestore')['addDoc']>
    readonly arrayUnion: UnwrapRef<typeof import('firebase/firestore')['arrayUnion']>
    readonly auth: UnwrapRef<typeof import('@/firebase')['auth']>
    readonly axios: UnwrapRef<typeof import('axios')['default']>
    readonly capitalize: UnwrapRef<typeof import('./utils/methods')['capitalize']>
    readonly collection: UnwrapRef<typeof import('firebase/firestore')['collection']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly createUserWithEmailAndPassword: UnwrapRef<typeof import('firebase/auth')['createUserWithEmailAndPassword']>
    readonly createVuetify: UnwrapRef<typeof import('vuetify')['createVuetify']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly db: UnwrapRef<typeof import('@/firebase')['db']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly deleteDoc: UnwrapRef<typeof import('firebase/firestore')['deleteDoc']>
    readonly doc: UnwrapRef<typeof import('firebase/firestore')['doc']>
    readonly editRoute: UnwrapRef<typeof import('./utils/routing')['editRoute']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly functions: UnwrapRef<typeof import('@/firebase')['functions']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly getDoc: UnwrapRef<typeof import('firebase/firestore')['getDoc']>
    readonly getDocs: UnwrapRef<typeof import('firebase/firestore')['getDocs']>
    readonly getDownloadURL: UnwrapRef<typeof import('firebase/storage')['getDownloadURL']>
    readonly getIdToken: UnwrapRef<typeof import('firebase/auth')['getIdToken']>
    readonly getUserState: UnwrapRef<typeof import('@/firebase')['getUserState']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly httpsCallable: UnwrapRef<typeof import('firebase/functions')['httpsCallable']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onSnapshot: UnwrapRef<typeof import('firebase/firestore')['onSnapshot']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly query: UnwrapRef<typeof import('firebase/firestore')['query']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly setDoc: UnwrapRef<typeof import('firebase/firestore')['setDoc']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly signInWithEmailAndPassword: UnwrapRef<typeof import('firebase/auth')['signInWithEmailAndPassword']>
    readonly signInWithPopup: UnwrapRef<typeof import('firebase/auth')['signInWithPopup']>
    readonly signOut: UnwrapRef<typeof import('firebase/auth')['signOut']>
    readonly storage: UnwrapRef<typeof import('@/firebase')['storage']>
    readonly storageRef: UnwrapRef<typeof import('firebase/storage')['ref']>
    readonly stores: UnwrapRef<typeof import('./stores/index')['default']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly updateDoc: UnwrapRef<typeof import('firebase/firestore')['updateDoc']>
    readonly uploadBytes: UnwrapRef<typeof import('firebase/storage')['uploadBytes']>
    readonly uploadBytesResumable: UnwrapRef<typeof import('firebase/storage')['uploadBytesResumable']>
    readonly uploadTaskSnapshot: UnwrapRef<typeof import('firebase/storage')['uploadTaskSnapshot']>
    readonly useAppStore: UnwrapRef<typeof import('./stores/app')['useAppStore']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useAuthStore: UnwrapRef<typeof import('./stores/auth')['useAuthStore']>
    readonly useComicsStore: UnwrapRef<typeof import('./stores/comics')['useComicsStore']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useDisplay: UnwrapRef<typeof import('vuetify')['useDisplay']>
    readonly useRoute: UnwrapRef<typeof import('vue-router/auto')['useRoute']>
    readonly useRouteQuery: UnwrapRef<typeof import('@vueuse/router')['useRouteQuery']>
    readonly useRouter: UnwrapRef<typeof import('vue-router/auto')['useRouter']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useTheme: UnwrapRef<typeof import('vuetify')['useTheme']>
    readonly useUserProfileStore: UnwrapRef<typeof import('./stores/user-profile')['useUserProfileStore']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
    readonly where: UnwrapRef<typeof import('firebase/firestore')['where']>
  }
}
